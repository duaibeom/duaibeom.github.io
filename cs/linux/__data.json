{"type":"data","nodes":[null,{"type":"data","data":[{"prev":1,"next":2,"section":5},false,{"slug":3,"title":4},"cs\u002Fglossary","Glossary",{"file":6,"title":7,"date":8,"summary":-1,"tag":9,"toc":11,"body":12},"cs\u002F01-linux.md","Linux","Oct. 25, 2019",[10],"linux","\u003Ch4\u003EContents\u003C\u002Fh4\u003E\u003Cp class=\"toc-h1\"\u003E\u003Ca href=\"#linux-tip\"\u003ELinux Tip\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#adding-storage\"\u003E\u003Ca href=\"https:\u002F\u002Fhelp.ubuntu.com\u002Fcommunity\u002FInstallingANewHardDrive\"\u003EAdding Storage\u003C\u002Fa\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#std-io\"\u003ESTD I\u002FO\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#awk\"\u003Eawk\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#sed\"\u003Esed\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#wc\"\u003Ewc\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#sort\"\u003Esort\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#svg-to-png\"\u003ESVG to PNG\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h1\"\u003E\u003Ca href=\"#terminal-shortcut\"\u003E\u003Ca href=\"https:\u002F\u002Flinuxhandbook.com\u002Flinux-shortcuts\u002F\"\u003ETerminal Shortcut\u003C\u002Fa\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#ssh\"\u003Essh\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#lsof\"\u003Elsof\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#login-info\"\u003Elogin info\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#uname\"\u003Euname\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#systemctl\"\u003Esystemctl\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#ldd\"\u003Eldd\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E","\u003Ch1 id=\"linux-tip\"\u003ELinux Tip\u003Ca href=\"#linux-tip\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh1\u003E\u003Ch2 id=\"adding-storage\"\u003E\u003Ca href=\"https:\u002F\u002Fhelp.ubuntu.com\u002Fcommunity\u002FInstallingANewHardDrive\"\u003EAdding Storage\u003C\u002Fa\u003E\u003Ca href=\"#adding-storage\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003Esudo fdisk -l\u003C\u002Fcode\u003E or \u003Ccode\u003Esudo lshw -C disk\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Esudo fdisk \u002Fdev\u002Fsd&lt;?&gt;\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EWe want to add a new partition. Type “n” and press enter.\u003C\u002Fli\u003E\n\u003Cli\u003E작성중\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2 id=\"std-io\"\u003ESTD I\u002FO\u003Ca href=\"#std-io\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E#0 stdin -&gt; PROCESS -&gt; #1 stdout, #2 stderr\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Estdin\u003C\u002Fstrong\u003E: input information. Also, \u003Ccode\u003E&lt;\u003C\u002Fcode\u003E define possible\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Estdout\u003C\u002Fstrong\u003E: normal output\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Estderr\u003C\u002Fstrong\u003E: error output\u003Cbr\u003E\u003Cbr\u003E\u003Ccode\u003EIn python, print(&quot;message&quot;, file = sys.stderr) (default: stdout)\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block bash\"\u003E\u003Cpre class='language-bash'\u003E\u003Ccode\u003Eprogram \u003Cspan class=\"token operator\"\u003E\u003Cspan class=\"token file-descriptor important\"\u003E1\u003C\u002Fspan\u003E\u003E\u003C\u002Fspan\u003E result.txt \u003Cspan class=\"token operator\"\u003E\u003Cspan class=\"token file-descriptor important\"\u003E2\u003C\u002Fspan\u003E\u003E\u003C\u002Fspan\u003E error.txt\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E\u003Cstrong\u003Epipe\u003C\u002Fstrong\u003E \u003Ccode\u003Erun1 | run2\u003C\u002Fcode\u003E run2 receiving run1’s result.\u003C\u002Fp\u003E\n\u003Ch2 id=\"awk\"\u003Eawk\u003Ca href=\"#awk\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003Eawk ‘{print $0}’ infile\u003C\u002Fp\u003E\n\u003Ch2 id=\"sed\"\u003Esed\u003Ca href=\"#sed\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EUsage: sed [OPTION]… {script-only-if-no-other-script} [input-file]…\u003C\u002Fp\u003E\n\u003Cp\u003E  \u003Ccode\u003E-n\u003C\u002Fcode\u003E, suppress automatic printing of pattern space\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E  \u003Ccode\u003E-e script\u003C\u002Fcode\u003E, add the script to the commands to be executed\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E  \u003Ccode\u003E-f script-file\u003C\u002Fcode\u003E, add the contents of script-file to the commands to be executed\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E  \u003Ccode\u003E-i[SUFFIX]\u003C\u002Fcode\u003E, edit files in place (makes backup if SUFFIX supplied)\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E  \u003Ccode\u003E-l N\u003C\u002Fcode\u003E, specify the desired line-wrap length for the `l’ command\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E  \u003Ccode\u003E-E, -r\u003C\u002Fcode\u003E, use extended regular expressions in the script\u003Cbr\u003E\u003Cbr\u003E                 (for portability use POSIX -E).\u003C\u002Fp\u003E\n\u003Cp\u003E  \u003Ccode\u003E-d\u003C\u002Fcode\u003E, delete, i.e. 3d, 3rd row’s deleted.\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block bash\"\u003E\u003Cpre class='language-bash'\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Esed\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-i\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-e\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E's\u002Fabc\u002F\\x0\u002Fg'\u003C\u002Fspan\u003E \u002Ftmp\u002Ffile.txt  \u003Cspan class=\"token comment\"\u003E# \\x0?\u003C\u002Fspan\u003E\n\u003Cspan class=\"token function\"\u003Esed\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-i\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\u002Fabc\u002Fd; \u002FXYZ\u002Fd'\u003C\u002Fspan\u003E \u002Ftmp\u002Ffile.txt  \u003Cspan class=\"token comment\"\u003E# \u002Ftmp\u002Ffile.txt에서 abc와 XYZ를 찾아 삭제한다.\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2 id=\"wc\"\u003Ewc\u003Ca href=\"#wc\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003Edefault printing $rows, $words, $characters\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E-l\u003C\u002Fcode\u003E row\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E-w\u003C\u002Fcode\u003E word\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E-c\u003C\u002Fcode\u003E character\u003C\u002Fp\u003E\n\u003Ch2 id=\"sort\"\u003Esort\u003Ca href=\"#sort\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Ch2 id=\"svg-to-png\"\u003ESVG to PNG\u003Ca href=\"#svg-to-png\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EImageMagick has some issue. \u003Ccode\u003Einkscape -w 1024 -h 1024 input.svg --export-filename output.png\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Eref - \u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fa\u002F14174624\u002F10103236\"\u003Ehttps:\u002F\u002Fstackoverflow.com\u002Fa\u002F14174624\u002F10103236\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch1 id=\"terminal-shortcut\"\u003E\u003Ca href=\"https:\u002F\u002Flinuxhandbook.com\u002Flinux-shortcuts\u002F\"\u003ETerminal Shortcut\u003C\u002Fa\u003E\u003Ca href=\"#terminal-shortcut\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh1\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003ETab\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^C\u003C\u002Fcode\u003E: stop some progress\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^Z\u003C\u002Fcode\u003E: This shortcut will send a running program in the background.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^D\u003C\u002Fcode\u003E: logout in ssh condition. exit in local condition.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^L\u003C\u002Fcode\u003E: clear terminal screen\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^A\u003C\u002Fcode\u003E: This shortcut will move the cursor to the beginning of the line.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^E\u003C\u002Fcode\u003E: This shortcut is sort of opposite to Ctrl+A.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^U\u003C\u002Fcode\u003E: This shortcut erases everything from the current cursor position to the beginning of the line.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^K\u003C\u002Fcode\u003E: it erases everything from the current cursor position to the end of the line.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^W\u003C\u002Fcode\u003E: Using Ctrl+W shortcut, you can erase the word preceding to the cursor position.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^Y\u003C\u002Fcode\u003E: This will paste the erased text that you saw with ^W, ^U and ^K shortcuts.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^P\u003C\u002Fcode\u003E: You can use this shortcut to view the previous command.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^N\u003C\u002Fcode\u003E: You can use this shortcut in conjugation with Ctrl+P. Ctrl+N displays the next command.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E^R\u003C\u002Fcode\u003E: search in command history\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2 id=\"ssh\"\u003Essh\u003Ca href=\"#ssh\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003Essh-keygen -p -f ~\u002F.ssh\u002Fid_rsa\u003C\u002Fcode\u003E passphrase를 변경할 수 있다.\u003Cbr\u003E\u003Ccode\u003Essh-copy-id &lt;someonePC&gt;\u003C\u002Fcode\u003E는 \u003Ccode\u003E~\u002F.ssh\u002Fid_rsa.pub\u003C\u002Fcode\u003E가 \u003Ccode\u003E&lt;someonePC&gt;:~\u002F.ssh\u002Fauthorized_keys\u003C\u002Fcode\u003E에 추가가 된다.\u003C\u002Fp\u003E\n\u003Ch2 id=\"lsof\"\u003Elsof\u003Ca href=\"#lsof\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Ch2 id=\"login-info\"\u003Elogin info\u003Ca href=\"#login-info\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Ch2 id=\"uname\"\u003Euname\u003Ca href=\"#uname\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003E-a\u003C\u002Fcode\u003E: all information\u003Cbr\u003E\u003Ccode\u003E-r\u003C\u002Fcode\u003E: kernel release\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block bash\"\u003E\u003Cpre class='language-bash'\u003E\u003Ccode\u003E\u003Cspan class=\"token shebang important\"\u003E#!\u002Fbin\u002Fbash\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E# Basic info\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003E\u003Cspan class=\"token environment constant\"\u003EHOSTNAME\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Euname\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-n\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003EROOT1\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edf\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-Ph\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Egrep\u003C\u002Fspan\u003E sdb1 \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eawk\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'{print $4}'\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Etr\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-d\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\n'\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003EROOT2\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edf\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-Ph\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Egrep\u003C\u002Fspan\u003E sda1 \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eawk\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'{print $4}'\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Etr\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-d\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\n'\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003EDATE\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Edate\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E# System load\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003EMEMORY1\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Efree\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-t\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-m\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Egrep\u003C\u002Fspan\u003E Total \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eawk\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'{print $3\" MB\";}'\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003EMEMORY2\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Efree\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-t\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-m\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Egrep\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"Mem\"\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eawk\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'{print $2\" MB\";}'\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003ELOAD1\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecat\u003C\u002Fspan\u003E \u002Fproc\u002Floadavg \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eawk\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'print $1'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003ELOAD5\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecat\u003C\u002Fspan\u003E \u002Fproc\u002Floadavg \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eawk\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'print $2'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token assign-left variable\"\u003ELOAD15\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Ecat\u003C\u002Fspan\u003E \u002Fproc\u002Floadavg \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eawk\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'print $3'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\n\n\u003Cspan class=\"token assign-left variable\"\u003Elogo\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"\n---\nABC\n---\n\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"token builtin class-name\"\u003Eecho\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-e\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"\u003Cspan class=\"token entity\" title=\"\\e\"\u003E\\e\u003C\u002Fspan\u003E[1;92m\u003Cspan class=\"token variable\"\u003E$logo\u003C\u002Fspan\u003E\u003Cspan class=\"token entity\" title=\"\\e\"\u003E\\e\u003C\u002Fspan\u003E[m\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token builtin class-name\"\u003Eecho\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-e\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"\n\u003Cspan class=\"token entity\" title=\"\\e\"\u003E\\e\u003C\u002Fspan\u003E[1;90m# info: ~ \u003Cspan class=\"token entity\" title=\"\\e\"\u003E\\e\u003C\u002Fspan\u003E[0m\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"token builtin class-name\"\u003Eecho\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"\n=================================================\n - Hostname............: \u003Cspan class=\"token environment constant\"\u003E$HOSTNAME\u003C\u002Fspan\u003E\n - Disk Space..........: \u003Cspan class=\"token variable\"\u003E$ROOT1\u003C\u002Fspan\u003E remaining (\u002Fhome)\n                         \u003Cspan class=\"token variable\"\u003E$ROOT2\u003C\u002Fspan\u003E remaining (\u002Fhome2)\n=================================================\n - CPU usage...........: \u003Cspan class=\"token variable\"\u003E$LOAD1\u003C\u002Fspan\u003E, \u003Cspan class=\"token variable\"\u003E$LOAD5\u003C\u002Fspan\u003E, \u003Cspan class=\"token variable\"\u003E$LOAD15\u003C\u002Fspan\u003E (1, 5, 15 min)\n - Memory used.........: \u003Cspan class=\"token variable\"\u003E$MEMORY1\u003C\u002Fspan\u003E \u002F \u003Cspan class=\"token variable\"\u003E$MEMORY2\u003C\u002Fspan\u003E\n - Swap in use.........: \u003Cspan class=\"token variable\"\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"token function\"\u003Efree\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-m\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Etail\u003C\u002Fspan\u003E \u003Cspan class=\"token parameter variable\"\u003E-n\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eawk\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'{print $3}'\u003C\u002Fspan\u003E\u003Cspan class=\"token variable\"\u003E`\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E MB\n=================================================\n              @ \u003Cspan class=\"token variable\"\u003E$DATE\u003C\u002Fspan\u003E\"\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2 id=\"systemctl\"\u003Esystemctl\u003Ca href=\"#systemctl\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003Esystemctl get-default\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Esystemctl set-default [multi-user.target (runlevel 3)|graphical.target (runlevel 5)]\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"ldd\"\u003Eldd\u003Ca href=\"#ldd\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003Eldd -v \u002Fpath\u002Fto\u002Fprogram\u002Fexecutable\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"\"\u003E\u003Ca href=\"#\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003Eto show you the shared libraries required by any given program\u003C\u002Fp\u003E\n"],"uses":{"params":["path","slug"]}}]}
