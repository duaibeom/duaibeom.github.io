{"type":"data","nodes":[null,{"type":"data","data":[{"prev":1,"next":4,"section":7},{"slug":2,"title":3},"cs\u002Fglossary","Glossary",{"slug":5,"title":6},"cs\u002Ftmux","Tmux 사용법",{"file":8,"title":9,"date":10,"summary":-1,"tag":11,"toc":13,"body":14},"cs\u002F03-python3.md","Python3","Oct. 28, 2019",[12],"python","\u003Ch4\u003EContents\u003C\u002Fh4\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#time-module\"\u003Etime module\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#iteraion\"\u003EIteraion\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h4\"\u003E\u003Ca href=\"#-staticmethod\"\u003E@ staticmethod\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#가상환경-만들기\"\u003E가상환경 만들기\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#color--bold-text\"\u003E\u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fa\u002F17303428\u002F10103236\"\u003EColor &amp; Bold text\u003C\u002Fa\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#split-strings-into-words-with-multiple-word-boundary-delimiters\"\u003E\u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fa\u002F1059596\u002F10103236\"\u003ESplit Strings into words with multiple word boundary delimiters\u003C\u002Fa\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#argparse\"\u003E\u003Ca href=\"https:\u002F\u002Fdocs.python.org\u002Fko\u002F3.8\u002Fhowto\u002Fargparse.html#id1\"\u003EArgparse\u003C\u002Fa\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#pandas\"\u003EPandas\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#time\"\u003ETime\u003C\u002Fa\u003E\u003C\u002Fp\u003E","\u003Ch2 id=\"time-module\"\u003Etime module\u003Ca href=\"#time-module\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003Eperf_counter()\u003C\u002Fcode\u003E and \u003Ccode\u003Eprocess_time()\u003C\u002Fcode\u003E - \u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fq\u002F25785243\u002F10103236\"\u003Ehttps:\u002F\u002Fstackoverflow.com\u002Fq\u002F25785243\u002F10103236\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"\"\u003E\u003Ca href=\"#\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003Echar.isdigit()\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Echar.isupper()\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Echar.islower()\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eprint(float(&#39;&#39;.join(filter(str.isdigit, x))))\u003C\u002Fcode\u003E\u003Cbr\u003EExtract number from a string\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003ESomeStr.endswith((&#39;multiple&#39;, &#39;suffixes&#39;))\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cp\u003EList\u003Cbr\u003E\u003Ccode\u003Ea = [1,1,2,2,1,1]\u003C\u002Fcode\u003E\u003Cbr\u003E\u003Ccode\u003Ea.count(1)\u003C\u002Fcode\u003E &gt;&gt;&gt; \u003Ccode\u003E4\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EPEP 448 – Additional Unpacking Generalizations\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Ccode\u003E* iterable unpacking operator\u003C\u002Fcode\u003E\u003Cbr\u003E\u003Ccode\u003E** dictionary unpacking operators\u003C\u002Fcode\u003E\u003Cbr\u003E\u003Ccode\u003EThe unary ~ (invert) operator yields the bitwise inversion of its integer argument.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eprint\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E3\u003C\u002Fspan\u003E\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token builtin\"\u003Edict\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E**\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'x'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E y\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E**\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'z'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'x'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'y'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'z'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2 id=\"iteraion\"\u003EIteraion\u003Ca href=\"#iteraion\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efor\u003C\u002Fspan\u003E i \u003Cspan class=\"token keyword\"\u003Ein\u003C\u002Fspan\u003E a\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E     \u003Cspan class=\"token keyword\"\u003Eif\u003C\u002Fspan\u003E a\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E         \u003Cspan class=\"token keyword\"\u003Edel\u003C\u002Fspan\u003E a\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Ei\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E \nTraceback \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Emost recent call last\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E\n  File \u003Cspan class=\"token string\"\u003E\"&lt;stdin\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E line \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003Emodule\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E\nRuntimeError\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E dictionary changed size during iteration\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E당연하게도 iteration 중에는 iteration 대상인 dictionary 변경이 불가하다. 다른 대상은 가능한 것 같다.\u003C\u002Fp\u003E\n\u003Ch4 id=\"-staticmethod\"\u003E@ staticmethod\u003Ca href=\"#-staticmethod\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fa\u002F1669524\"\u003Ehttps:\u002F\u002Fstackoverflow.com\u002Fa\u002F1669524\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"가상환경-만들기\"\u003E가상환경 만들기\u003Ca href=\"#가상환경-만들기\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003E가상 환경의 장점은\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E가상환경은 다양한 버전의 Python 및 Python package 설치가 가능하다.\u003C\u002Fli\u003E\n\u003Cli\u003EPackage 꼬임을 방지 및 관리 용이성.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Col\u003E\n\u003Cli\u003E가상환경 설치법\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cdiv class=\"code-block \"\u003E\u003Cpre class='language-'\u003E\u003Ccode\u003Esudo apt update\nsudo apt install python3.&lt;version&gt; python3.&lt;version&gt;-venv\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Col start=\"2\"\u003E\n\u003Cli\u003E\u003Cp\u003E가상환경 생성\u003Cbr\u003E\u003Ccode\u003Epython3.&lt;version&gt; -m venv ~\u002F&lt;venv_dir_name&gt;\u003C\u002Fcode\u003E 을 이용해서 가상환경을 생성할 수 있다.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E예로 python3.7을 사용해 가상환경을 생성 한다고 하면 \u003Ccode\u003Epython3.7 -m venv ~\u002Fvenv_py37\u003C\u002Fcode\u003E으로 실행\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E가상환경 이용\u003Cbr\u003E\u003Ccode\u003Esource ~\u002F&lt;venv_dir_name&gt;\u002Fbin\u002Factivate\u003C\u002Fcode\u003E을 통해 가상환경을 활성화 할 수 있다.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E아까의 예를 사용한다면 \u003Ccode\u003Esource ~\u002Fvenv_py37\u002Fbin\u002Factivate\u003C\u002Fcode\u003E를 통해 가능하다.\u003Cbr\u003E가상환경 상에서 \u003Ccode\u003Epip --version ; python --version\u003C\u002Fcode\u003E을 확인하면 설정했던 python version으로 실행이 된다.\u003Cbr\u003E가상환경을 좀 더 편히 사용하기 위해 ~\u002F.bashrc에 \u003Ccode\u003Ealias &lt;nickname&gt;=&#39;source \u002Fhome\u002Fyongbeom\u002Fvenv_py37\u002Fbin\u002Factivate&#39;\u003C\u002Fcode\u003E를 추가한다. 그리고 \u003Ccode\u003Esource ~\u002F.bashrc\u003C\u002Fcode\u003E로 .bashrc 를 현재 환경에 업데이트 한 후, \u003Ccode\u003E&lt;nickname&gt;\u003C\u002Fcode\u003E을 사용하면 쉽게 가상환경을 사용할 수 있다.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E가상환경 탈출(?)\u003Cbr\u003E가상환경을 벋어나고자 한다면 \u003Ccode\u003Edeactivate\u003C\u002Fcode\u003E를 command 창에 치면 나갈 수 있다.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch3 id=\"color--bold-text\"\u003E\u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fa\u002F17303428\u002F10103236\"\u003EColor &amp; Bold text\u003C\u002Fa\u003E\u003Ca href=\"#color--bold-text\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"token class-name\"\u003EColor\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E\n    PURPLE \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[95m'\u003C\u002Fspan\u003E\n    CYAN \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[96m'\u003C\u002Fspan\u003E\n    DARKCYAN \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[36m'\u003C\u002Fspan\u003E\n    BLUE \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[94m'\u003C\u002Fspan\u003E\n    GREEN \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[92m'\u003C\u002Fspan\u003E\n    YELLOW \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[93m'\u003C\u002Fspan\u003E\n    RED \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[91m'\u003C\u002Fspan\u003E\n    BOLD \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[1m'\u003C\u002Fspan\u003E\n    UNDERLINE \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[4m'\u003C\u002Fspan\u003E\n    END \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'\\033[0m'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token keyword\"\u003Eprint\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string-interpolation\"\u003E\u003Cspan class=\"token string\"\u003Ef'\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003EColor\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EBOLD\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003EHello World !\u003C\u002Fspan\u003E\u003Cspan class=\"token interpolation\"\u003E\u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003EColor\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EEND\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch3 id=\"split-strings-into-words-with-multiple-word-boundary-delimiters\"\u003E\u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fa\u002F1059596\u002F10103236\"\u003ESplit Strings into words with multiple word boundary delimiters\u003C\u002Fa\u003E\u003Ca href=\"#split-strings-into-words-with-multiple-word-boundary-delimiters\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eimport\u003C\u002Fspan\u003E re\n\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E re\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esplit\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'\\W+'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'Words, words, words.'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Words'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'words'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'words'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E''\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E re\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esplit\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'(\\W+)'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'Words, words, words.'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Words'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E', '\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'words'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E', '\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'words'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'.'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E''\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E re\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esplit\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'\\W+'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'Words, words, words.'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Words'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'words, words.'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"token comment\"\u003E# Will be splitting on: , &lt;space\u003E - ! ? :\u003C\u002Fspan\u003E\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token builtin\"\u003Efilter\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token boolean\"\u003ENone\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E re\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esplit\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"[, \\-!?:]+\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"Hey, you - what are you doing here!?\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'Hey'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'you'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'what'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'are'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'you'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'doing'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'here'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch3 id=\"argparse\"\u003E\u003Ca href=\"https:\u002F\u002Fdocs.python.org\u002Fko\u002F3.8\u002Fhowto\u002Fargparse.html#id1\"\u003EArgparse\u003C\u002Fa\u003E\u003Ca href=\"#argparse\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003E기본적인 사용법:\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003E\u003Cspan class=\"token keyword\"\u003Eimport\u003C\u002Fspan\u003E argparse\nparser \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E argparse\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EArgumentParser\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nparser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eadd_argument\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'--foo'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token builtin\"\u003Ehelp\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'foo help'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nargs \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E parser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparse_args\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cul\u003E\n\u003Cli\u003EArgumentParser.\u003Cstrong\u003Eadd_argument\u003C\u002Fstrong\u003E(name or flags…[, action][, nargs][, const][, default][, type][, choices][, required][, help][, metavar][, dest])  \u003Cblockquote\u003E\n\u003Cp\u003E\u003Ccode\u003Ename or flags\u003C\u002Fcode\u003E - 옵션 문자열의 이름이나 리스트, 예를 들어 foo 또는 -f, –foo.\u003Cbr\u003E\u003Ccode\u003Eaction\u003C\u002Fcode\u003E - 명령행에서 이 인자가 발견될 때 수행 할 액션의 기본형.\u003Cbr\u003E\u003Ccode\u003Enargs\u003C\u002Fcode\u003E - 소비되어야 하는 명령행 인자의 수.\u003Cbr\u003E\u003Ccode\u003Econst\u003C\u002Fcode\u003E - 일부 action 및 nargs 를 선택할 때 필요한 상숫값.\u003Cbr\u003E\u003Ccode\u003Edefault\u003C\u002Fcode\u003E - 인자가 명령행에 없는 경우 생성되는 값.\u003Cbr\u003E\u003Ccode\u003Etype\u003C\u002Fcode\u003E - 명령행 인자가 변환되어야 할 형.\u003Cbr\u003E\u003Ccode\u003Echoices\u003C\u002Fcode\u003E - 인자로 허용되는 값의 컨테이너.\u003Cbr\u003E\u003Ccode\u003Erequired\u003C\u002Fcode\u003E - 명령행 옵션을 생략 할 수 있는지 아닌지 (선택적일 때만).\u003Cbr\u003E\u003Ccode\u003Ehelp\u003C\u002Fcode\u003E - 인자가 하는 일에 대한 간단한 설명.\u003Cbr\u003E\u003Ccode\u003Emetavar\u003C\u002Fcode\u003E - 사용 메시지에 사용되는 인자의 이름.\u003Cbr\u003E\u003Ccode\u003Edest\u003C\u002Fcode\u003E - parse_args() 가 반환하는 객체에 추가될 어트리뷰트의 이름.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003Eparser \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E argparse\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EArgumentParser\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Edescription\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"calculate X to the power of Y\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\ngroup \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E parser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eadd_mutually_exclusive_group\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\ngroup\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eadd_argument\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"-v\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"--verbose\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E action\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"store_true\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\ngroup\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eadd_argument\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"-q\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"--quiet\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E action\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"store_true\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nparser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eadd_argument\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"x\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token builtin\"\u003Etype\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token builtin\"\u003Eint\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token builtin\"\u003Ehelp\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"the base\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nparser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eadd_argument\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"y\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token builtin\"\u003Etype\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token builtin\"\u003Eint\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token builtin\"\u003Ehelp\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"the exponent\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nargs \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E parser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparse_args\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E충돌하는 옵션은 그룹으로 묶어 사용한다.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Edest\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E선택 인자 액션의 경우, \u003Ccode\u003Edest\u003C\u002Fcode\u003E 의 값은 보통 옵션 문자열에서 유추됩니다. ArgumentParser 는 첫 번째 긴 옵션 문자열을 취하고 앞의 \u003Ccode\u003E--\u003C\u002Fcode\u003E 문자열을 제거하여 \u003Ccode\u003Edest\u003C\u002Fcode\u003E 의 값을 만듭니다. 긴 옵션 문자열이 제공되지 않았다면 \u003Ccode\u003Edest\u003C\u002Fcode\u003E 는 첫 번째 짧은 옵션 문자열에서 앞의 \u003Ccode\u003E-\u003C\u002Fcode\u003E 문자를 제거하여 만듭니다. 문자열이 항상 유효한 어트리뷰트 이름이 되도록 만들기 위해 중간에 나오는 \u003Ccode\u003E-\u003C\u002Fcode\u003E 문자는 \u003Ccode\u003E_\u003C\u002Fcode\u003E 문자로 변환됩니다. 아래 예제는 이 동작을 보여줍니다.\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E parser \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E argparse\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EArgumentParser\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E parser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eadd_argument\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'-f'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'--foo-bar'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'--foo'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E parser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eadd_argument\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'-x'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'-y'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E parser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparse_args\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'-f 1 -x 2'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esplit\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nNamespace\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Efoo_bar\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'1'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E x\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'2'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E parser\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eparse_args\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'--foo 1 -y 2'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esplit\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nNamespace\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Efoo_bar\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'1'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E x\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'2'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2 id=\"pandas\"\u003EPandas\u003Ca href=\"#pandas\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cblockquote\u003E\n\u003Cp\u003EDataFrame.\u003Cstrong\u003Esort_values\u003C\u002Fstrong\u003E(self, by, axis=0, ascending=True, inplace=False, kind=’quicksort’, na_position=’last’)\u003Cbr\u003ESort by the values along either axis.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E df\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Esort_values\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Eby\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'col1'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E ascending\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token boolean\"\u003EFalse\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E na_position\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'first'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n    col1 col2 col3\n\u003Cspan class=\"token number\"\u003E3\u003C\u002Fspan\u003E   NaN  \u003Cspan class=\"token number\"\u003E8\u003C\u002Fspan\u003E    \u003Cspan class=\"token number\"\u003E4\u003C\u002Fspan\u003E\n\u003Cspan class=\"token number\"\u003E4\u003C\u002Fspan\u003E   D    \u003Cspan class=\"token number\"\u003E7\u003C\u002Fspan\u003E    \u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E\n\u003Cspan class=\"token number\"\u003E5\u003C\u002Fspan\u003E   C    \u003Cspan class=\"token number\"\u003E4\u003C\u002Fspan\u003E    \u003Cspan class=\"token number\"\u003E3\u003C\u002Fspan\u003E\n\u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E   B    \u003Cspan class=\"token number\"\u003E9\u003C\u002Fspan\u003E    \u003Cspan class=\"token number\"\u003E9\u003C\u002Fspan\u003E\n\u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E   A    \u003Cspan class=\"token number\"\u003E2\u003C\u002Fspan\u003E    \u003Cspan class=\"token number\"\u003E0\u003C\u002Fspan\u003E\n\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E   A    \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E    \u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003Eascending: 오르는, 상승하는 (ant. descending)\u003C\u002Fp\u003E\n\u003Ch3 id=\"time\"\u003ETime\u003Ca href=\"#time\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cdiv class=\"code-block \"\u003E\u003Cpre class='language-'\u003E\u003Ccode\u003E# timer.py\nimport time\nclass TimerError(Exception):\n    \"\"\"A custom exception used to report errors in use of Timer class\"\"\"\n\nclass Timer:\n    def __init__(self):\n        self._start_time = None\n\n    def start(self):\n        \"\"\"Start a new timer\"\"\"\n        if self._start_time is not None:\n            raise TimerError(f\"Timer is running. Use .stop() to stop it\")\n\n        self._start_time = time.perf_counter()\n    def stop(self):\n        \"\"\"Stop the timer, and report the elapsed time\"\"\"\n        if self._start_time is None:\n            raise TimerError(f\"Timer is not running. Use .start() to start it\")\n\n        elapsed_time = time.perf_counter() - self._start_time\n        self._start_time = None\n        print(f\"Elapsed time: {elapsed_time:0.4f} seconds\")\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E"],"uses":{"params":["path","slug"]}}]}
