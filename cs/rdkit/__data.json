{"type":"data","nodes":[null,{"type":"data","data":[{"prev":1,"next":4,"section":7},{"slug":2,"title":3},"cs\u002Fregexp","정규화 표현식(Regular Expression)",{"slug":5,"title":6},"cs\u002Falgorithms","Algorithms",{"file":8,"title":9,"date":10,"summary":-1,"tag":-1,"toc":11,"body":12},"cs\u002F09-rdkit.md","RDKit Installation","Oct. 28, 2019","\u003Ch4\u003EContents\u003C\u002Fh4\u003E\u003Cp class=\"toc-h2\"\u003E\u003Ca href=\"#conda-를-이용한-rdkit-설치\"\u003EConda 를 이용한 rdkit 설치.\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#anaconda3-설치-방법\"\u003E\u003Ca href=\"https:\u002F\u002Fwww.anaconda.com\u002Fdistribution\u002F\"\u003EAnaconda3\u003C\u002Fa\u003E 설치 방법\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#smilesmolsupplier\"\u003E\u003Ca href=\"https:\u002F\u002Fwww.rdkit.org\u002Fdocs\u002Fsource\u002Frdkit.Chem.rdmolfiles.html#rdkit.Chem.rdmolfiles.SmilesMolSupplier\"\u003ESmilesMolSupplier\u003C\u002Fa\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#rwmol\"\u003E\u003Ca href=\"https:\u002F\u002Fwww.rdkit.org\u002Fdocs\u002Fsource\u002Frdkit.Chem.rdchem.html#rdkit.Chem.rdchem.RWMol\"\u003ERWMol\u003C\u002Fa\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#moltosmiles\"\u003E\u003Ca href=\"\"\u003EMolToSmiles\u003C\u002Fa\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#kekulize\"\u003EKekulize\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#rdkit-fingerprint-저장하기\"\u003ERdkit Fingerprint 저장하기.\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h4\"\u003E\u003Ca href=\"#to-binary\"\u003ETo Binary\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h4\"\u003E\u003Ca href=\"#save-fp\"\u003ESave FP\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h3\"\u003E\u003Ca href=\"#configuration\"\u003Econfiguration\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp class=\"toc-h4\"\u003E\u003Ca href=\"#disable-log\"\u003EDisable log\u003C\u002Fa\u003E\u003C\u002Fp\u003E","\u003Ch2 id=\"conda-를-이용한-rdkit-설치\"\u003EConda 를 이용한 rdkit 설치.\u003Ca href=\"#conda-를-이용한-rdkit-설치\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003ERDKIT을 콘다를 이용하지 않고, 설치하는 방법은 매우 어렵다. (lib 문제로 설치가 어렵다.)\u003C\u002Fp\u003E\n\u003Cp\u003E마음 편하게 \u003Cstrong\u003Eanaconda3\u003C\u002Fstrong\u003E를 이용해 설치를 하자.\u003C\u002Fp\u003E\n\u003Ch3 id=\"anaconda3-설치-방법\"\u003E\u003Ca href=\"https:\u002F\u002Fwww.anaconda.com\u002Fdistribution\u002F\"\u003EAnaconda3\u003C\u002Fa\u003E 설치 방법\u003Ca href=\"#anaconda3-설치-방법\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003ECentOS 7.7 에서 진행했다.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ebash Anaconda3-2019.10-Linux-x86_64.sh\u003C\u002Fcode\u003E로 설치를 시작한다.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Econda init\u003C\u002Fcode\u003E을 하지 않으면 venv 생성이 어렵다. 해주는 것이 좋다.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E문제는 하게 되면 기본으로 anaconda3 환경을 사용하게 된다.\u003Cbr\u003E이것이 싫다면 \u003Ccode\u003Econda config --set auto_activate_base false\u003C\u002Fcode\u003E 해주자.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Ccode\u003Econda create -n rdkit_venv python=3.7\u003C\u002Fcode\u003E을 이용해 rdkit 설치를 위한 가상환경을 만든다.\u003C\u002Fp\u003E\n\u003Cp\u003E생성 후에 \u003Ccode\u003Econda activate rdkit_venv\u003C\u002Fcode\u003E로 \u003Cstrong\u003Erdkit_venv\u003C\u002Fstrong\u003E를 활성화 해주자.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cdel\u003E\u003Ccode\u003Econda install -c rdkit rdkit\u003C\u002Fcode\u003E로 rdkit을 설치.\u003C\u002Fdel\u003E  # rdkit 채널은 python version 3.7 이 최대이다.\u003Cbr\u003E\u003Ccode\u003Econda install -c conda-forge rdkit\u003C\u002Fcode\u003E로 rdkit을 설치.\u003C\u002Fp\u003E\n\u003Cp\u003E끝.\u003C\u002Fp\u003E\n\u003Cp\u003EPS. \u003Ccode\u003Eanconda3\u002Fenvs\u002Frdkit_venv\u003C\u002Fcode\u003E dir를 복사하여 그대로 사용할 수 있다. 다른 OS상에서는 약간의 문제가 발생한다.\u003C\u002Fp\u003E\n\u003Ch3 id=\"smilesmolsupplier\"\u003E\u003Ca href=\"https:\u002F\u002Fwww.rdkit.org\u002Fdocs\u002Fsource\u002Frdkit.Chem.rdmolfiles.html#rdkit.Chem.rdmolfiles.SmilesMolSupplier\"\u003ESmilesMolSupplier\u003C\u002Fa\u003E\u003Ca href=\"#smilesmolsupplier\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Erdkit.Chem.SmilesMolSupplier((object)arg1, (str)data[, (str)delimiter=&#39; &#39;[, (int)smilesColumn=0[, (int)nameColumn=1[, (bool)titleLine=True[, (bool)sanitize=True]]]]])\u003C\u002Fcode\u003E\u003Cbr\u003E\u003Cbr\u003E파일에 저장되어 있는 SMILES을 input으로 받아 mol type으로 저장하며, delimiter, smiles, name Column을 변수로 받는다.\u003C\u002Fp\u003E\n\u003Cp\u003E변수?? 의미 다시 한번 찾아보기\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block python\"\u003E\u003Cpre class='language-python'\u003E\u003Ccode\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E suppl \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E SmilesMolSupplier\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E'in.smi'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token operator\"\u003E\u003E\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efor\u003C\u002Fspan\u003E mol \u003Cspan class=\"token keyword\"\u003Ein\u003C\u002Fspan\u003E suppl\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E    mol\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003EGetNumAtoms\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch3 id=\"rwmol\"\u003E\u003Ca href=\"https:\u002F\u002Fwww.rdkit.org\u002Fdocs\u002Fsource\u002Frdkit.Chem.rdchem.html#rdkit.Chem.rdchem.RWMol\"\u003ERWMol\u003C\u002Fa\u003E\u003Ca href=\"#rwmol\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Eclass rdkit.Chem.rdchem.RWMol((object)arg1, (Mol)arg2)\u003C\u002Fcode\u003E →  None :\u003Cbr\u003E\u003Cbr\u003EBases: rdkit.Chem.rdchem.Mol\u003C\u002Fp\u003E\n\u003Cp\u003EThe RW molecule class (read\u002Fwrite)\u003C\u002Fp\u003E\n\u003Cp\u003EThis class is a more-performant version of the EditableMolecule class in that it is a ‘live’ molecule and shares the interface from the Mol class. All changes are performed without the need to create a copy of the molecule using GetMol() (this is still available, however).\u003C\u002Fp\u003E\n\u003Cp\u003En.b. Eventually this class may become a direct replacement for EditableMol\u003C\u002Fp\u003E\n\u003Cp\u003EConstruct from a Mol\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EAddAtom\u003C\u002Fstrong\u003E((RWMol)arg1, (Atom)atom) → int :\u003Cbr\u003E\u003Cbr\u003Eadd an atom, returns the index of the newly added atom\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EAddBond\u003C\u002Fstrong\u003E((RWMol)arg1, (int)beginAtomIdx, (int)endAtomIdx[, (BondType)order=rdkit.Chem.rdchem.BondType.UNSPECIFIED]) → int :\u003Cbr\u003E\u003Cbr\u003Eadd a bond, returns the new number of bonds\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EGetMol\u003C\u002Fstrong\u003E((RWMol)arg1) → Mol :\u003Cbr\u003E\u003Cbr\u003EReturns a Mol (a normal molecule)\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003ERemoveAtom\u003C\u002Fstrong\u003E((RWMol)arg1, (int)arg2) → None :\u003Cbr\u003E\u003Cbr\u003ERemove the specified atom from the molecule\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003ERemoveBond\u003C\u002Fstrong\u003E((RWMol)arg1, (int)arg2, (int)arg3) → None :\u003Cbr\u003E\u003Cbr\u003ERemove the specified bond from the molecule\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EReplaceAtom\u003C\u002Fstrong\u003E((RWMol)arg1, (int)index, (Atom)newAtom[, (bool)updateLabel=False[, (bool)preserveProps=False]]) → None :\u003Cbr\u003E\u003Cbr\u003Ereplaces the specified atom with the provided one If updateLabel is True, the new atom becomes the active atom If preserveProps is True preserve keep the existing props unless explicit set on the new atom\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EReplaceBond\u003C\u002Fstrong\u003E((RWMol)arg1, (int)index, (Bond)newBond[, (bool)preserveProps=False]) → None :\u003Cbr\u003E\u003Cbr\u003Ereplaces the specified bond with the provided one. If preserveProps is True preserve keep the existing props unless explicit set on the new bond\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003ESetStereoGroups\u003C\u002Fstrong\u003E((RWMol)arg1, (list)stereo_groups) → None :\u003Cbr\u003E\u003Cbr\u003ESet the stereo groups\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 id=\"moltosmiles\"\u003E\u003Ca href=\"\"\u003EMolToSmiles\u003C\u002Fa\u003E\u003Ca href=\"#moltosmiles\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003Erdkit.Chem.rdmolfiles.\u003Cstrong\u003EMolToSmiles\u003C\u002Fstrong\u003E((Mol)mol[, (bool)isomericSmiles=True[, (bool)kekuleSmiles=False[, (int)rootedAtAtom=-1[, (bool)canonical=True[, (bool)allBondsExplicit=False[, (bool)allHsExplicit=False[, (bool)doRandom=False]]]]]]]) → str\u003C\u002Fp\u003E\n\u003Ch3 id=\"kekulize\"\u003EKekulize\u003Ca href=\"#kekulize\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIf you’d like to have the Kekule form of the SMILES, first Kekulize the molecule, then use the “kekuleSmiles” option:\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block \"\u003E\u003Cpre class='language-'\u003E\u003Ccode\u003E&gt;&gt;&gt; Chem.Kekulize(m)\n&gt;&gt;&gt; Chem.MolToSmiles(m, kekuleSmiles=True)\n'C[C@H](O)C1=CC=CC=C1'\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch3 id=\"rdkit-fingerprint-저장하기\"\u003ERdkit Fingerprint 저장하기.\u003Ca href=\"#rdkit-fingerprint-저장하기\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Ch4 id=\"to-binary\"\u003ETo Binary\u003Ca href=\"#to-binary\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\u003Cdiv class=\"code-block \"\u003E\u003Cpre class='language-'\u003E\u003Ccode\u003Emol = Chem.MolFromSmiles('&lt;SMILES&gt;')\n\nfp = FingerprintMols.FingerprintMol(mol)\n\nbfp = fp.ToBinary()\n\ntmp = DataStructs.ExplicitBitVect(bfp)\n\nfp == tmp  # Ture\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch4 id=\"save-fp\"\u003ESave FP\u003Ca href=\"#save-fp\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\u003Cdiv class=\"code-block \"\u003E\u003Cpre class='language-'\u003E\u003Ccode\u003Ewith open('test0.list', 'wb') as f:\n    for i in q:\n        f.write(i+b',') # b'\\n' 은 다음 FP에 영향을 주기 때문에 read 시 그 다음 FP가 변형 됨.\n\nw = []\nwith open('test0.list', 'rb') as f:\n    e = f.read()\n\ne.split(b',')\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch3 id=\"configuration\"\u003Econfiguration\u003Ca href=\"#configuration\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Ch4 id=\"disable-log\"\u003EDisable log\u003Ca href=\"#disable-log\" class=\"anchor\"\u003E\u003Cspan class=\"visually-hidden\"\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\u003Cdiv class=\"code-block \"\u003E\u003Cpre class='language-'\u003E\u003Ccode\u003ErdBase.DisableLog('rdApp.*')\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E"],"uses":{"params":["path","slug"]}}]}
